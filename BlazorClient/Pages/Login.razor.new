@page "/login"
@inject BlazorClient.Services.IAuthService AuthService
@inject NavigationManager NavigationManager
@using BlazorClient.Models

<div class="min-h-screen flex items-center justify-center bg-notion-background-light">
    <div class="max-w-md w-full space-y-8 p-8 bg-white rounded-lg shadow-md">
        <div class="text-center">
            <h2 class="text-2xl font-bold text-notion-text-light">Sign in to your account</h2>
            <p class="mt-2 text-sm text-notion-text-secondary-light">
                Or <a href="/register" class="text-blue-600 hover:text-blue-500">create an account</a> if you don't have one
            </p>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="p-4 bg-red-100 border border-red-400 text-red-700 rounded mb-4">
                @errorMessage
            </div>
        }

        <EditForm Model="@loginRequest" OnValidSubmit="HandleLogin" class="mt-8 space-y-6">
            <DataAnnotationsValidator />
            
            <div class="space-y-4">
                <div>
                    <label for="email" class="block text-sm font-medium text-notion-text-light">Email</label>
                    <div class="mt-1">
                        <InputText id="email" 
                                class="appearance-none block w-full px-3 py-2 border border-notion-border-light rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" 
                                @bind-Value="loginRequest.Email" 
                                placeholder="Email address" />
                    </div>
                </div>

                <div>
                    <label for="password" class="block text-sm font-medium text-notion-text-light">Password</label>
                    <div class="mt-1">
                        <InputText id="password" 
                                type="password" 
                                class="appearance-none block w-full px-3 py-2 border border-notion-border-light rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500" 
                                @bind-Value="loginRequest.Password"
                                placeholder="Password" />
                    </div>
                </div>
            </div>

            <div>
                <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Sign in
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        errorMessage = null;
        try {
            var result = await AuthService.LoginAsync(loginRequest);
            if (result.Successful)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = result.Error ?? "Login failed. Please check your credentials.";
            }
        }
        catch (Exception ex) {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
